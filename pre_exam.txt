Tue Jan 18 16:40:19 EET 2022
+ hostname
Jaans-MBP
+ ansible-playbook infra.yaml --diff

PLAY [debug] *******************************************************************

TASK [Gathering Facts] *********************************************************
ok: [Yanny358-2]
ok: [Yanny358-1]
ok: [Yanny358-3]

TASK [debug : Debug] ***********************************************************
ok: [Yanny358-3] => {
    "msg": "Inventory hostname -> Yanny358-3 has gateway 192.168.42.1"
}
ok: [Yanny358-1] => {
    "msg": "Inventory hostname -> Yanny358-1 has gateway 192.168.42.1"
}
ok: [Yanny358-2] => {
    "msg": "Inventory hostname -> Yanny358-2 has gateway 192.168.42.1"
}

PLAY [init] ********************************************************************

TASK [Gathering Facts] *********************************************************
ok: [Yanny358-3]
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [init : Update APT cache] *************************************************
ok: [Yanny358-1]
ok: [Yanny358-2]
ok: [Yanny358-3]

TASK [backup : Create user backup] *********************************************
ok: [Yanny358-2]
ok: [Yanny358-3]
ok: [Yanny358-1]

TASK [backup : Create  SSH key for user backup] ********************************
ok: [Yanny358-3]
ok: [Yanny358-2]
ok: [Yanny358-1]

TASK [backup : Create directory] ***********************************************
ok: [Yanny358-3]
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [backup : Install duplicity] **********************************************
ok: [Yanny358-1]
ok: [Yanny358-2]
ok: [Yanny358-3]

TASK [backup : Create a file] **************************************************
ok: [Yanny358-2]
ok: [Yanny358-1]
ok: [Yanny358-3]

TASK [iptables : Fix ssl bug for docker] ***************************************
ok: [Yanny358-1]
ok: [Yanny358-3]
ok: [Yanny358-2]

TASK [iptables : Restore iptables] *********************************************
[WARNING]: Attempts to restore iptables state without rollback in case of
mistake may lead the ansible controller to loose access to the hosts and never
regain it before fixing firewall rules through a serial console, or any other
way except SSH. Please set task attribute 'poll' (=15) to 0, and 'async' (=0)
to a value >2 and not greater than 'ansible_timeout' (=10) (recommended).
[WARNING]: Attempts to restore iptables state without rollback in case of
mistake may lead the ansible controller to loose access to the hosts and never
regain it before fixing firewall rules through a serial console, or any other
way except SSH. Please set task attribute 'poll' (=15) to 0, and 'async' (=0)
to a value >2 and not greater than 'ansible_timeout' (=10) (recommended).
[WARNING]: Attempts to restore iptables state without rollback in case of
mistake may lead the ansible controller to loose access to the hosts and never
regain it before fixing firewall rules through a serial console, or any other
way except SSH. Please set task attribute 'poll' (=15) to 0, and 'async' (=0)
to a value >2 and not greater than 'ansible_timeout' (=10) (recommended).
ok: [Yanny358-3]
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [iptables : Install iptables-persistent] **********************************
ok: [Yanny358-3]
ok: [Yanny358-2]
ok: [Yanny358-1]

TASK [iptables : Saving iptables rules over reboot] ****************************
ok: [Yanny358-3]
ok: [Yanny358-1]
ok: [Yanny358-2]

PLAY [Bind9 and bind exporters] ************************************************

TASK [Gathering Facts] *********************************************************
ok: [Yanny358-1]
ok: [Yanny358-3]
ok: [Yanny358-2]

TASK [bind : Install package "bind9"] ******************************************
ok: [Yanny358-2]
ok: [Yanny358-3]
ok: [Yanny358-1]

TASK [bind : Copy new named.conf.options] **************************************
ok: [Yanny358-1]
ok: [Yanny358-3]
ok: [Yanny358-2]

TASK [bind : Copy db.iptv.cs] **************************************************
skipping: [Yanny358-1]
skipping: [Yanny358-2]
ok: [Yanny358-3]

TASK [bind : Copy db.iptv_slave.cs] ********************************************
skipping: [Yanny358-3]
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [bind : Copy db.reverse] **************************************************
skipping: [Yanny358-1]
skipping: [Yanny358-2]
ok: [Yanny358-3]

TASK [bind : Copy new named.conf.local] ****************************************
ok: [Yanny358-3]
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [bind : Force all notified handlers to run at this point] *****************

TASK [bind : Nsupdate A records] ***********************************************
skipping: [Yanny358-1] => (item={'key': 'backup', 'value': '192.168.42.132'}) 
skipping: [Yanny358-2] => (item={'key': 'backup', 'value': '192.168.42.132'}) 
ok: [Yanny358-3] => (item={'key': 'backup', 'value': '192.168.42.132'})

TASK [bind : Nsupdate CNAME records] *******************************************
skipping: [Yanny358-1] => (item={'key': 'grafana', 'value': 'Yanny358-3'}) 
skipping: [Yanny358-1] => (item={'key': 'influxdb', 'value': 'Yanny358-3'}) 
skipping: [Yanny358-1] => (item={'key': 'lb1', 'value': 'Yanny358-1'}) 
skipping: [Yanny358-1] => (item={'key': 'lb2', 'value': 'Yanny358-2'}) 
skipping: [Yanny358-1] => (item={'key': 'mysql1', 'value': 'Yanny358-1'}) 
skipping: [Yanny358-1] => (item={'key': 'mysql2', 'value': 'Yanny358-2'}) 
skipping: [Yanny358-2] => (item={'key': 'grafana', 'value': 'Yanny358-3'}) 
skipping: [Yanny358-1] => (item={'key': 'ns1', 'value': 'Yanny358-3'}) 
skipping: [Yanny358-1] => (item={'key': 'ns2', 'value': 'Yanny358-1'}) 
skipping: [Yanny358-2] => (item={'key': 'influxdb', 'value': 'Yanny358-3'}) 
skipping: [Yanny358-2] => (item={'key': 'lb1', 'value': 'Yanny358-1'}) 
skipping: [Yanny358-1] => (item={'key': 'ns3', 'value': 'Yanny358-2'}) 
skipping: [Yanny358-2] => (item={'key': 'lb2', 'value': 'Yanny358-2'}) 
skipping: [Yanny358-2] => (item={'key': 'mysql1', 'value': 'Yanny358-1'}) 
skipping: [Yanny358-1] => (item={'key': 'prometheus', 'value': 'Yanny358-3'}) 
skipping: [Yanny358-2] => (item={'key': 'mysql2', 'value': 'Yanny358-2'}) 
skipping: [Yanny358-1] => (item={'key': 'web1', 'value': 'Yanny358-1'}) 
skipping: [Yanny358-1] => (item={'key': 'web2', 'value': 'Yanny358-2'}) 
skipping: [Yanny358-2] => (item={'key': 'ns1', 'value': 'Yanny358-3'}) 
skipping: [Yanny358-2] => (item={'key': 'ns2', 'value': 'Yanny358-1'}) 
skipping: [Yanny358-1] => (item={'key': 'web3', 'value': 'Yanny358-3'}) 
skipping: [Yanny358-2] => (item={'key': 'ns3', 'value': 'Yanny358-2'}) 
skipping: [Yanny358-2] => (item={'key': 'prometheus', 'value': 'Yanny358-3'}) 
skipping: [Yanny358-2] => (item={'key': 'web1', 'value': 'Yanny358-1'}) 
skipping: [Yanny358-2] => (item={'key': 'web2', 'value': 'Yanny358-2'}) 
skipping: [Yanny358-2] => (item={'key': 'web3', 'value': 'Yanny358-3'}) 
ok: [Yanny358-3] => (item={'key': 'grafana', 'value': 'Yanny358-3'})
ok: [Yanny358-3] => (item={'key': 'influxdb', 'value': 'Yanny358-3'})
ok: [Yanny358-3] => (item={'key': 'lb1', 'value': 'Yanny358-1'})
ok: [Yanny358-3] => (item={'key': 'lb2', 'value': 'Yanny358-2'})
ok: [Yanny358-3] => (item={'key': 'mysql1', 'value': 'Yanny358-1'})
ok: [Yanny358-3] => (item={'key': 'mysql2', 'value': 'Yanny358-2'})
ok: [Yanny358-3] => (item={'key': 'ns1', 'value': 'Yanny358-3'})
ok: [Yanny358-3] => (item={'key': 'ns2', 'value': 'Yanny358-1'})
ok: [Yanny358-3] => (item={'key': 'ns3', 'value': 'Yanny358-2'})
ok: [Yanny358-3] => (item={'key': 'prometheus', 'value': 'Yanny358-3'})
ok: [Yanny358-3] => (item={'key': 'web1', 'value': 'Yanny358-1'})
ok: [Yanny358-3] => (item={'key': 'web2', 'value': 'Yanny358-2'})
ok: [Yanny358-3] => (item={'key': 'web3', 'value': 'Yanny358-3'})

TASK [bind : Service bind] *****************************************************
ok: [Yanny358-2]
ok: [Yanny358-1]
ok: [Yanny358-3]

TASK [bind_exporter : Install bind exporter] ***********************************
ok: [Yanny358-2]
ok: [Yanny358-3]
ok: [Yanny358-1]

TASK [bind_exporter : Enable bind_exporter] ************************************
ok: [Yanny358-1]
ok: [Yanny358-3]
ok: [Yanny358-2]

PLAY [DNS Resolve] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [Yanny358-3]
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [dns_resolve : Stop Ubuntu systemd-resolved] ******************************
ok: [Yanny358-3]
ok: [Yanny358-2]
ok: [Yanny358-1]

TASK [dns_resolve : Change DNS configuration file] *****************************
ok: [Yanny358-3]
ok: [Yanny358-1]
ok: [Yanny358-2]

PLAY [Mysql and mysql exporter] ************************************************

TASK [mysql : Install mysql] ***************************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql : start mysql] *****************************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql : Copy file] *******************************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql : MySQL database] **************************************************
ok: [Yanny358-2]
ok: [Yanny358-1]

TASK [mysql : MySQL user] ******************************************************
ok: [Yanny358-2]
ok: [Yanny358-1]

TASK [mysql : MySQL user replication] ******************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql : MySQL replica read only mode ON] *********************************
skipping: [Yanny358-2]
ok: [Yanny358-1]

TASK [mysql : MySQL primary read only mode OFF] ********************************
skipping: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql : Flush handlers] **************************************************

TASK [mysql_exporter : Install mysql exporter] *********************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql_exporter : Create a directory if it does not exist] ****************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql_exporter : Configure MySQL exporter] *******************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql_exporter : Create user exporter] ***********************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql_exporter : Pause for 10 sec] ***************************************
skipping: [Yanny358-1]

TASK [mysql_exporter : Configure MySQL exporter slave] *************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql_exporter : Enable mysql_exporter] **********************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql_backup : Create directory] *****************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql_backup : Create a file] ********************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql_backup : MySQL user backup] ****************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql_backup : Create a file] ********************************************
ok: [Yanny358-2]
ok: [Yanny358-1]

PLAY [Node exporter and nginx exporter] ****************************************

TASK [node_exporter : Install node exporters] **********************************
ok: [Yanny358-2]
ok: [Yanny358-1]
ok: [Yanny358-3]

TASK [node_exporter : Enable node exporter service] ****************************
ok: [Yanny358-1]
ok: [Yanny358-2]
ok: [Yanny358-3]

TASK [nginx : Install nginx] ***************************************************
ok: [Yanny358-2]
ok: [Yanny358-3]
ok: [Yanny358-1]

TASK [nginx : Copy file] *******************************************************
ok: [Yanny358-2]
ok: [Yanny358-3]
ok: [Yanny358-1]

TASK [nginx : start nginx] *****************************************************
ok: [Yanny358-1]
ok: [Yanny358-2]
ok: [Yanny358-3]

TASK [nginx_exporter : Install nginx exporter] *********************************
ok: [Yanny358-1]
ok: [Yanny358-2]
ok: [Yanny358-3]

TASK [nginx_exporter : Copy file] **********************************************
ok: [Yanny358-1]
ok: [Yanny358-2]
ok: [Yanny358-3]

TASK [nginx_exporter : Enable nginx_exporter] **********************************
ok: [Yanny358-1]
ok: [Yanny358-2]
ok: [Yanny358-3]

PLAY [Docker] ******************************************************************

TASK [docker : Docker package] *************************************************
ok: [Yanny358-1]
ok: [Yanny358-2]
ok: [Yanny358-3]

TASK [docker : Log in to DockerHub] ********************************************
ok: [Yanny358-2]
ok: [Yanny358-1]
ok: [Yanny358-3]

TASK [docker : Docker service] *************************************************
ok: [Yanny358-2]
ok: [Yanny358-3]
ok: [Yanny358-1]

PLAY [agama] *******************************************************************

TASK [agama : Create agama directory] ******************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [agama : Download agama Dockerfile] ***************************************
ok: [Yanny358-2]
ok: [Yanny358-1]

TASK [agama : Build docker image] **********************************************
ok: [Yanny358-2]
ok: [Yanny358-1]

TASK [agama : Agama containers] ************************************************
ok: [Yanny358-2] => (item={'key': 'agama1', 'value': 8007})
ok: [Yanny358-1] => (item={'key': 'agama1', 'value': 8007})
ok: [Yanny358-2] => (item={'key': 'agama2', 'value': 8008})
ok: [Yanny358-1] => (item={'key': 'agama2', 'value': 8008})

PLAY [Prometheus] **************************************************************

TASK [prometheus : Install prometheus] *****************************************
ok: [Yanny358-3]

TASK [prometheus : Configure Prometheus] ***************************************
ok: [Yanny358-3]

TASK [prometheus : Configure Prometheus web path] ******************************
ok: [Yanny358-3]

TASK [prometheus : start prometheus] *******************************************
ok: [Yanny358-3]

PLAY [Grafana] *****************************************************************

TASK [docker : Docker package] *************************************************
ok: [Yanny358-3]

TASK [docker : Log in to DockerHub] ********************************************
ok: [Yanny358-3]

TASK [docker : Docker service] *************************************************
ok: [Yanny358-3]

TASK [grafana : Grafana directory] *********************************************
ok: [Yanny358-3]

TASK [grafana : Grafana configuration] *****************************************
ok: [Yanny358-3]

TASK [grafana : Create directory for dashboard and datasources] ****************
ok: [Yanny358-3] => (item=dashboards)
ok: [Yanny358-3] => (item=datasources)

TASK [grafana : Datasource Grafana prometheus] *********************************
ok: [Yanny358-3]

TASK [grafana : Datasource Grafana latency] ************************************
ok: [Yanny358-3]

TASK [grafana : Dashboard Grafana main] ****************************************
ok: [Yanny358-3]

TASK [grafana : Main dashboard] ************************************************
ok: [Yanny358-3]

TASK [grafana : Syslog dashboard] **********************************************
ok: [Yanny358-3]

TASK [grafana : MySQL dashboard] ***********************************************
ok: [Yanny358-3]

TASK [grafana : Grafana docker container] **************************************
ok: [Yanny358-3]

PLAY [Influxdb] ****************************************************************

TASK [influxdb : Add an Apt signing key] ***************************************
ok: [Yanny358-3]

TASK [influxdb : Add specified repository] *************************************
ok: [Yanny358-3]

TASK [influxdb : Install influxdb and telegraf] ********************************
ok: [Yanny358-3]

TASK [influxdb : Reconfigure telegraf] *****************************************
ok: [Yanny358-3]

TASK [influxdb : Supress influxdb request logging] *****************************
ok: [Yanny358-3]

TASK [influxdb : Enable influxdb] **********************************************
ok: [Yanny358-3]

TASK [influxdb : Enable telegraf] **********************************************
ok: [Yanny358-3]

TASK [influxdb_exporter : Download InfluxDB stats exporter] ********************
ok: [Yanny358-3]

TASK [influxdb_exporter : InfluxDB stats exporter service] *********************
ok: [Yanny358-3]

TASK [influxdb_exporter : Enable prometheus-influxdb-stats-exporter] ***********
ok: [Yanny358-3]

TASK [influxdb_backup : Create directory] **************************************
ok: [Yanny358-3]

TASK [influxdb_backup : Create a file] *****************************************
ok: [Yanny358-3]

TASK [pinger : Install fping] **************************************************
ok: [Yanny358-3]

TASK [pinger : Add the user pinger] ********************************************
ok: [Yanny358-3]

TASK [pinger : Create directory] ***********************************************
ok: [Yanny358-3]

TASK [pinger : pinger configuration] *******************************************
ok: [Yanny358-3]

TASK [pinger : pinger script] **************************************************
ok: [Yanny358-3]

TASK [pinger : pinger service] *************************************************
ok: [Yanny358-3]

TASK [pinger : Enable pinger] **************************************************
ok: [Yanny358-3]

TASK [rsyslog : Reconfigure rsyslog] *******************************************
ok: [Yanny358-3]

TASK [rsyslog : Enable rsyslog] ************************************************
ok: [Yanny358-3]

PLAY [Haproxy] *****************************************************************

TASK [haproxy : Install haproxy] ***********************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [haproxy : Copy file] *****************************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [haproxy : start haproxy] *************************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [haproxy_exporter : Install haproxy exporter] *****************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [haproxy_exporter : Copy file] ********************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [haproxy_exporter : Enable haproxy_exporter] ******************************
ok: [Yanny358-2]
ok: [Yanny358-1]

PLAY [Keepalived] **************************************************************

TASK [Gathering Facts] *********************************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [keepalived : Install keepalived] *****************************************
ok: [Yanny358-2]
ok: [Yanny358-1]

TASK [keepalived : Create user keepalived_script] ******************************
ok: [Yanny358-2]
ok: [Yanny358-1]

TASK [keepalived : Copy file ha88.j2] ******************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [keepalived : Copy file keepalived.conf.j2] *******************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [keepalived : start keepalived] *******************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [keepalived_exporter : Download and unarchive keepalived exporter] ********
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [keepalived_exporter : Create keepalived-exporter service] ****************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [keepalived_exporter : Start service keepalived-exporter, if not started] ***
ok: [Yanny358-1]
ok: [Yanny358-2]

PLAY RECAP *********************************************************************
Yanny358-1                 : ok=71   changed=0    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
Yanny358-2                 : ok=71   changed=0    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
Yanny358-3                 : ok=76   changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   

+ ansible-playbook infra.yaml --diff

PLAY [debug] *******************************************************************

TASK [Gathering Facts] *********************************************************
ok: [Yanny358-2]
ok: [Yanny358-1]
ok: [Yanny358-3]

TASK [debug : Debug] ***********************************************************
ok: [Yanny358-3] => {
    "msg": "Inventory hostname -> Yanny358-3 has gateway 192.168.42.1"
}
ok: [Yanny358-1] => {
    "msg": "Inventory hostname -> Yanny358-1 has gateway 192.168.42.1"
}
ok: [Yanny358-2] => {
    "msg": "Inventory hostname -> Yanny358-2 has gateway 192.168.42.1"
}

PLAY [init] ********************************************************************

TASK [Gathering Facts] *********************************************************
ok: [Yanny358-1]
ok: [Yanny358-3]
ok: [Yanny358-2]

TASK [init : Update APT cache] *************************************************
ok: [Yanny358-2]
ok: [Yanny358-1]
ok: [Yanny358-3]

TASK [backup : Create user backup] *********************************************
ok: [Yanny358-1]
ok: [Yanny358-3]
ok: [Yanny358-2]

TASK [backup : Create  SSH key for user backup] ********************************
ok: [Yanny358-3]
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [backup : Create directory] ***********************************************
ok: [Yanny358-1]
ok: [Yanny358-2]
ok: [Yanny358-3]

TASK [backup : Install duplicity] **********************************************
ok: [Yanny358-2]
ok: [Yanny358-1]
ok: [Yanny358-3]

TASK [backup : Create a file] **************************************************
ok: [Yanny358-3]
ok: [Yanny358-2]
ok: [Yanny358-1]

TASK [iptables : Fix ssl bug for docker] ***************************************
ok: [Yanny358-3]
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [iptables : Restore iptables] *********************************************
[WARNING]: Attempts to restore iptables state without rollback in case of
mistake may lead the ansible controller to loose access to the hosts and never
regain it before fixing firewall rules through a serial console, or any other
way except SSH. Please set task attribute 'poll' (=15) to 0, and 'async' (=0)
to a value >2 and not greater than 'ansible_timeout' (=10) (recommended).
[WARNING]: Attempts to restore iptables state without rollback in case of
mistake may lead the ansible controller to loose access to the hosts and never
regain it before fixing firewall rules through a serial console, or any other
way except SSH. Please set task attribute 'poll' (=15) to 0, and 'async' (=0)
to a value >2 and not greater than 'ansible_timeout' (=10) (recommended).
[WARNING]: Attempts to restore iptables state without rollback in case of
mistake may lead the ansible controller to loose access to the hosts and never
regain it before fixing firewall rules through a serial console, or any other
way except SSH. Please set task attribute 'poll' (=15) to 0, and 'async' (=0)
to a value >2 and not greater than 'ansible_timeout' (=10) (recommended).
ok: [Yanny358-2]
ok: [Yanny358-1]
ok: [Yanny358-3]

TASK [iptables : Install iptables-persistent] **********************************
ok: [Yanny358-1]
ok: [Yanny358-3]
ok: [Yanny358-2]

TASK [iptables : Saving iptables rules over reboot] ****************************
ok: [Yanny358-3]
ok: [Yanny358-1]
ok: [Yanny358-2]

PLAY [Bind9 and bind exporters] ************************************************

TASK [Gathering Facts] *********************************************************
ok: [Yanny358-3]
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [bind : Install package "bind9"] ******************************************
ok: [Yanny358-2]
ok: [Yanny358-3]
ok: [Yanny358-1]

TASK [bind : Copy new named.conf.options] **************************************
ok: [Yanny358-3]
ok: [Yanny358-2]
ok: [Yanny358-1]

TASK [bind : Copy db.iptv.cs] **************************************************
skipping: [Yanny358-1]
skipping: [Yanny358-2]
ok: [Yanny358-3]

TASK [bind : Copy db.iptv_slave.cs] ********************************************
skipping: [Yanny358-3]
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [bind : Copy db.reverse] **************************************************
skipping: [Yanny358-1]
skipping: [Yanny358-2]
ok: [Yanny358-3]

TASK [bind : Copy new named.conf.local] ****************************************
ok: [Yanny358-3]
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [bind : Force all notified handlers to run at this point] *****************

TASK [bind : Nsupdate A records] ***********************************************
skipping: [Yanny358-1] => (item={'key': 'backup', 'value': '192.168.42.132'}) 
skipping: [Yanny358-2] => (item={'key': 'backup', 'value': '192.168.42.132'}) 
ok: [Yanny358-3] => (item={'key': 'backup', 'value': '192.168.42.132'})

TASK [bind : Nsupdate CNAME records] *******************************************
skipping: [Yanny358-1] => (item={'key': 'grafana', 'value': 'Yanny358-3'}) 
skipping: [Yanny358-1] => (item={'key': 'influxdb', 'value': 'Yanny358-3'}) 
skipping: [Yanny358-1] => (item={'key': 'lb1', 'value': 'Yanny358-1'}) 
skipping: [Yanny358-1] => (item={'key': 'lb2', 'value': 'Yanny358-2'}) 
skipping: [Yanny358-1] => (item={'key': 'mysql1', 'value': 'Yanny358-1'}) 
skipping: [Yanny358-1] => (item={'key': 'mysql2', 'value': 'Yanny358-2'}) 
skipping: [Yanny358-2] => (item={'key': 'grafana', 'value': 'Yanny358-3'}) 
skipping: [Yanny358-1] => (item={'key': 'ns1', 'value': 'Yanny358-3'}) 
skipping: [Yanny358-2] => (item={'key': 'influxdb', 'value': 'Yanny358-3'}) 
skipping: [Yanny358-1] => (item={'key': 'ns2', 'value': 'Yanny358-1'}) 
skipping: [Yanny358-2] => (item={'key': 'lb1', 'value': 'Yanny358-1'}) 
skipping: [Yanny358-1] => (item={'key': 'ns3', 'value': 'Yanny358-2'}) 
skipping: [Yanny358-2] => (item={'key': 'lb2', 'value': 'Yanny358-2'}) 
skipping: [Yanny358-1] => (item={'key': 'prometheus', 'value': 'Yanny358-3'}) 
skipping: [Yanny358-1] => (item={'key': 'web1', 'value': 'Yanny358-1'}) 
skipping: [Yanny358-1] => (item={'key': 'web2', 'value': 'Yanny358-2'}) 
skipping: [Yanny358-1] => (item={'key': 'web3', 'value': 'Yanny358-3'}) 
skipping: [Yanny358-2] => (item={'key': 'mysql1', 'value': 'Yanny358-1'}) 
skipping: [Yanny358-2] => (item={'key': 'mysql2', 'value': 'Yanny358-2'}) 
skipping: [Yanny358-2] => (item={'key': 'ns1', 'value': 'Yanny358-3'}) 
skipping: [Yanny358-2] => (item={'key': 'ns2', 'value': 'Yanny358-1'}) 
skipping: [Yanny358-2] => (item={'key': 'ns3', 'value': 'Yanny358-2'}) 
skipping: [Yanny358-2] => (item={'key': 'prometheus', 'value': 'Yanny358-3'}) 
skipping: [Yanny358-2] => (item={'key': 'web1', 'value': 'Yanny358-1'}) 
skipping: [Yanny358-2] => (item={'key': 'web2', 'value': 'Yanny358-2'}) 
skipping: [Yanny358-2] => (item={'key': 'web3', 'value': 'Yanny358-3'}) 
ok: [Yanny358-3] => (item={'key': 'grafana', 'value': 'Yanny358-3'})
ok: [Yanny358-3] => (item={'key': 'influxdb', 'value': 'Yanny358-3'})
ok: [Yanny358-3] => (item={'key': 'lb1', 'value': 'Yanny358-1'})
ok: [Yanny358-3] => (item={'key': 'lb2', 'value': 'Yanny358-2'})
ok: [Yanny358-3] => (item={'key': 'mysql1', 'value': 'Yanny358-1'})
ok: [Yanny358-3] => (item={'key': 'mysql2', 'value': 'Yanny358-2'})
ok: [Yanny358-3] => (item={'key': 'ns1', 'value': 'Yanny358-3'})
ok: [Yanny358-3] => (item={'key': 'ns2', 'value': 'Yanny358-1'})
ok: [Yanny358-3] => (item={'key': 'ns3', 'value': 'Yanny358-2'})
ok: [Yanny358-3] => (item={'key': 'prometheus', 'value': 'Yanny358-3'})
ok: [Yanny358-3] => (item={'key': 'web1', 'value': 'Yanny358-1'})
ok: [Yanny358-3] => (item={'key': 'web2', 'value': 'Yanny358-2'})
ok: [Yanny358-3] => (item={'key': 'web3', 'value': 'Yanny358-3'})

TASK [bind : Service bind] *****************************************************
ok: [Yanny358-1]
ok: [Yanny358-3]
ok: [Yanny358-2]

TASK [bind_exporter : Install bind exporter] ***********************************
ok: [Yanny358-3]
ok: [Yanny358-2]
ok: [Yanny358-1]

TASK [bind_exporter : Enable bind_exporter] ************************************
ok: [Yanny358-3]
ok: [Yanny358-1]
ok: [Yanny358-2]

PLAY [DNS Resolve] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [Yanny358-1]
ok: [Yanny358-3]
ok: [Yanny358-2]

TASK [dns_resolve : Stop Ubuntu systemd-resolved] ******************************
ok: [Yanny358-3]
ok: [Yanny358-2]
ok: [Yanny358-1]

TASK [dns_resolve : Change DNS configuration file] *****************************
ok: [Yanny358-3]
ok: [Yanny358-1]
ok: [Yanny358-2]

PLAY [Mysql and mysql exporter] ************************************************

TASK [mysql : Install mysql] ***************************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql : start mysql] *****************************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql : Copy file] *******************************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql : MySQL database] **************************************************
ok: [Yanny358-2]
ok: [Yanny358-1]

TASK [mysql : MySQL user] ******************************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql : MySQL user replication] ******************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql : MySQL replica read only mode ON] *********************************
skipping: [Yanny358-2]
ok: [Yanny358-1]

TASK [mysql : MySQL primary read only mode OFF] ********************************
skipping: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql : Flush handlers] **************************************************

TASK [mysql_exporter : Install mysql exporter] *********************************
ok: [Yanny358-2]
ok: [Yanny358-1]

TASK [mysql_exporter : Create a directory if it does not exist] ****************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql_exporter : Configure MySQL exporter] *******************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql_exporter : Create user exporter] ***********************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql_exporter : Pause for 10 sec] ***************************************
skipping: [Yanny358-1]

TASK [mysql_exporter : Configure MySQL exporter slave] *************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql_exporter : Enable mysql_exporter] **********************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql_backup : Create directory] *****************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql_backup : Create a file] ********************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql_backup : MySQL user backup] ****************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql_backup : Create a file] ********************************************
ok: [Yanny358-2]
ok: [Yanny358-1]

PLAY [Node exporter and nginx exporter] ****************************************

TASK [node_exporter : Install node exporters] **********************************
ok: [Yanny358-2]
ok: [Yanny358-1]
ok: [Yanny358-3]

TASK [node_exporter : Enable node exporter service] ****************************
ok: [Yanny358-1]
ok: [Yanny358-3]
ok: [Yanny358-2]

TASK [nginx : Install nginx] ***************************************************
ok: [Yanny358-1]
ok: [Yanny358-3]
ok: [Yanny358-2]

TASK [nginx : Copy file] *******************************************************
ok: [Yanny358-1]
ok: [Yanny358-3]
ok: [Yanny358-2]

TASK [nginx : start nginx] *****************************************************
ok: [Yanny358-1]
ok: [Yanny358-2]
ok: [Yanny358-3]

TASK [nginx_exporter : Install nginx exporter] *********************************
ok: [Yanny358-1]
ok: [Yanny358-2]
ok: [Yanny358-3]

TASK [nginx_exporter : Copy file] **********************************************
ok: [Yanny358-1]
ok: [Yanny358-2]
ok: [Yanny358-3]

TASK [nginx_exporter : Enable nginx_exporter] **********************************
ok: [Yanny358-3]
ok: [Yanny358-2]
ok: [Yanny358-1]

PLAY [Docker] ******************************************************************

TASK [docker : Docker package] *************************************************
ok: [Yanny358-2]
ok: [Yanny358-1]
ok: [Yanny358-3]

TASK [docker : Log in to DockerHub] ********************************************
ok: [Yanny358-2]
ok: [Yanny358-1]
ok: [Yanny358-3]

TASK [docker : Docker service] *************************************************
ok: [Yanny358-1]
ok: [Yanny358-2]
ok: [Yanny358-3]

PLAY [agama] *******************************************************************

TASK [agama : Create agama directory] ******************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [agama : Download agama Dockerfile] ***************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [agama : Build docker image] **********************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [agama : Agama containers] ************************************************
ok: [Yanny358-2] => (item={'key': 'agama1', 'value': 8007})
ok: [Yanny358-1] => (item={'key': 'agama1', 'value': 8007})
ok: [Yanny358-2] => (item={'key': 'agama2', 'value': 8008})
ok: [Yanny358-1] => (item={'key': 'agama2', 'value': 8008})

PLAY [Prometheus] **************************************************************

TASK [prometheus : Install prometheus] *****************************************
ok: [Yanny358-3]

TASK [prometheus : Configure Prometheus] ***************************************
ok: [Yanny358-3]

TASK [prometheus : Configure Prometheus web path] ******************************
ok: [Yanny358-3]

TASK [prometheus : start prometheus] *******************************************
ok: [Yanny358-3]

PLAY [Grafana] *****************************************************************

TASK [docker : Docker package] *************************************************
ok: [Yanny358-3]

TASK [docker : Log in to DockerHub] ********************************************
ok: [Yanny358-3]

TASK [docker : Docker service] *************************************************
ok: [Yanny358-3]

TASK [grafana : Grafana directory] *********************************************
ok: [Yanny358-3]

TASK [grafana : Grafana configuration] *****************************************
ok: [Yanny358-3]

TASK [grafana : Create directory for dashboard and datasources] ****************
ok: [Yanny358-3] => (item=dashboards)
ok: [Yanny358-3] => (item=datasources)

TASK [grafana : Datasource Grafana prometheus] *********************************
ok: [Yanny358-3]

TASK [grafana : Datasource Grafana latency] ************************************
ok: [Yanny358-3]

TASK [grafana : Dashboard Grafana main] ****************************************
ok: [Yanny358-3]

TASK [grafana : Main dashboard] ************************************************
ok: [Yanny358-3]

TASK [grafana : Syslog dashboard] **********************************************
ok: [Yanny358-3]

TASK [grafana : MySQL dashboard] ***********************************************
ok: [Yanny358-3]

TASK [grafana : Grafana docker container] **************************************
ok: [Yanny358-3]

PLAY [Influxdb] ****************************************************************

TASK [influxdb : Add an Apt signing key] ***************************************
ok: [Yanny358-3]

TASK [influxdb : Add specified repository] *************************************
ok: [Yanny358-3]

TASK [influxdb : Install influxdb and telegraf] ********************************
ok: [Yanny358-3]

TASK [influxdb : Reconfigure telegraf] *****************************************
ok: [Yanny358-3]

TASK [influxdb : Supress influxdb request logging] *****************************
ok: [Yanny358-3]

TASK [influxdb : Enable influxdb] **********************************************
ok: [Yanny358-3]

TASK [influxdb : Enable telegraf] **********************************************
ok: [Yanny358-3]

TASK [influxdb_exporter : Download InfluxDB stats exporter] ********************
ok: [Yanny358-3]

TASK [influxdb_exporter : InfluxDB stats exporter service] *********************
ok: [Yanny358-3]

TASK [influxdb_exporter : Enable prometheus-influxdb-stats-exporter] ***********
ok: [Yanny358-3]

TASK [influxdb_backup : Create directory] **************************************
ok: [Yanny358-3]

TASK [influxdb_backup : Create a file] *****************************************
ok: [Yanny358-3]

TASK [pinger : Install fping] **************************************************
ok: [Yanny358-3]

TASK [pinger : Add the user pinger] ********************************************
ok: [Yanny358-3]

TASK [pinger : Create directory] ***********************************************
ok: [Yanny358-3]

TASK [pinger : pinger configuration] *******************************************
ok: [Yanny358-3]

TASK [pinger : pinger script] **************************************************
ok: [Yanny358-3]

TASK [pinger : pinger service] *************************************************
ok: [Yanny358-3]

TASK [pinger : Enable pinger] **************************************************
ok: [Yanny358-3]

TASK [rsyslog : Reconfigure rsyslog] *******************************************
ok: [Yanny358-3]

TASK [rsyslog : Enable rsyslog] ************************************************
ok: [Yanny358-3]

PLAY [Haproxy] *****************************************************************

TASK [haproxy : Install haproxy] ***********************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [haproxy : Copy file] *****************************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [haproxy : start haproxy] *************************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [haproxy_exporter : Install haproxy exporter] *****************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [haproxy_exporter : Copy file] ********************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [haproxy_exporter : Enable haproxy_exporter] ******************************
ok: [Yanny358-2]
ok: [Yanny358-1]

PLAY [Keepalived] **************************************************************

TASK [Gathering Facts] *********************************************************
ok: [Yanny358-2]
ok: [Yanny358-1]

TASK [keepalived : Install keepalived] *****************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [keepalived : Create user keepalived_script] ******************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [keepalived : Copy file ha88.j2] ******************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [keepalived : Copy file keepalived.conf.j2] *******************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [keepalived : start keepalived] *******************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [keepalived_exporter : Download and unarchive keepalived exporter] ********
ok: [Yanny358-2]
ok: [Yanny358-1]

TASK [keepalived_exporter : Create keepalived-exporter service] ****************
ok: [Yanny358-2]
ok: [Yanny358-1]

TASK [keepalived_exporter : Start service keepalived-exporter, if not started] ***
ok: [Yanny358-1]
ok: [Yanny358-2]

PLAY RECAP *********************************************************************
Yanny358-1                 : ok=71   changed=0    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
Yanny358-2                 : ok=71   changed=0    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
Yanny358-3                 : ok=76   changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   

+ ansible all -b -m reboot -a test_command=uptime
Yanny358-3 | CHANGED => {
    "changed": true,
    "elapsed": 54,
    "rebooted": true
}
Yanny358-2 | CHANGED => {
    "changed": true,
    "elapsed": 59,
    "rebooted": true
}
Yanny358-1 | CHANGED => {
    "changed": true,
    "elapsed": 58,
    "rebooted": true
}
+ ansible-playbook infra.yaml --diff

PLAY [debug] *******************************************************************

TASK [Gathering Facts] *********************************************************
ok: [Yanny358-1]
ok: [Yanny358-3]
ok: [Yanny358-2]

TASK [debug : Debug] ***********************************************************
ok: [Yanny358-3] => {
    "msg": "Inventory hostname -> Yanny358-3 has gateway 192.168.42.1"
}
ok: [Yanny358-1] => {
    "msg": "Inventory hostname -> Yanny358-1 has gateway 192.168.42.1"
}
ok: [Yanny358-2] => {
    "msg": "Inventory hostname -> Yanny358-2 has gateway 192.168.42.1"
}

PLAY [init] ********************************************************************

TASK [Gathering Facts] *********************************************************
ok: [Yanny358-3]
ok: [Yanny358-2]
ok: [Yanny358-1]

TASK [init : Update APT cache] *************************************************
ok: [Yanny358-2]
ok: [Yanny358-3]
ok: [Yanny358-1]

TASK [backup : Create user backup] *********************************************
ok: [Yanny358-1]
ok: [Yanny358-2]
ok: [Yanny358-3]

TASK [backup : Create  SSH key for user backup] ********************************
ok: [Yanny358-1]
ok: [Yanny358-3]
ok: [Yanny358-2]

TASK [backup : Create directory] ***********************************************
ok: [Yanny358-1]
ok: [Yanny358-2]
ok: [Yanny358-3]

TASK [backup : Install duplicity] **********************************************
ok: [Yanny358-1]
ok: [Yanny358-2]
ok: [Yanny358-3]

TASK [backup : Create a file] **************************************************
ok: [Yanny358-2]
ok: [Yanny358-1]
ok: [Yanny358-3]

TASK [iptables : Fix ssl bug for docker] ***************************************
ok: [Yanny358-2]
ok: [Yanny358-1]
ok: [Yanny358-3]

TASK [iptables : Restore iptables] *********************************************
[WARNING]: Attempts to restore iptables state without rollback in case of
mistake may lead the ansible controller to loose access to the hosts and never
regain it before fixing firewall rules through a serial console, or any other
way except SSH. Please set task attribute 'poll' (=15) to 0, and 'async' (=0)
to a value >2 and not greater than 'ansible_timeout' (=10) (recommended).
[WARNING]: Attempts to restore iptables state without rollback in case of
mistake may lead the ansible controller to loose access to the hosts and never
regain it before fixing firewall rules through a serial console, or any other
way except SSH. Please set task attribute 'poll' (=15) to 0, and 'async' (=0)
to a value >2 and not greater than 'ansible_timeout' (=10) (recommended).
[WARNING]: Attempts to restore iptables state without rollback in case of
mistake may lead the ansible controller to loose access to the hosts and never
regain it before fixing firewall rules through a serial console, or any other
way except SSH. Please set task attribute 'poll' (=15) to 0, and 'async' (=0)
to a value >2 and not greater than 'ansible_timeout' (=10) (recommended).
ok: [Yanny358-2]
ok: [Yanny358-3]
ok: [Yanny358-1]

TASK [iptables : Install iptables-persistent] **********************************
ok: [Yanny358-2]
ok: [Yanny358-1]
ok: [Yanny358-3]

TASK [iptables : Saving iptables rules over reboot] ****************************
ok: [Yanny358-3]
ok: [Yanny358-2]
ok: [Yanny358-1]

PLAY [Bind9 and bind exporters] ************************************************

TASK [Gathering Facts] *********************************************************
ok: [Yanny358-3]
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [bind : Install package "bind9"] ******************************************
ok: [Yanny358-3]
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [bind : Copy new named.conf.options] **************************************
ok: [Yanny358-3]
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [bind : Copy db.iptv.cs] **************************************************
skipping: [Yanny358-1]
skipping: [Yanny358-2]
ok: [Yanny358-3]

TASK [bind : Copy db.iptv_slave.cs] ********************************************
skipping: [Yanny358-3]
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [bind : Copy db.reverse] **************************************************
skipping: [Yanny358-1]
skipping: [Yanny358-2]
ok: [Yanny358-3]

TASK [bind : Copy new named.conf.local] ****************************************
ok: [Yanny358-3]
ok: [Yanny358-2]
ok: [Yanny358-1]

TASK [bind : Force all notified handlers to run at this point] *****************

TASK [bind : Nsupdate A records] ***********************************************
skipping: [Yanny358-1] => (item={'key': 'backup', 'value': '192.168.42.132'}) 
skipping: [Yanny358-2] => (item={'key': 'backup', 'value': '192.168.42.132'}) 
ok: [Yanny358-3] => (item={'key': 'backup', 'value': '192.168.42.132'})

TASK [bind : Nsupdate CNAME records] *******************************************
skipping: [Yanny358-1] => (item={'key': 'grafana', 'value': 'Yanny358-3'}) 
skipping: [Yanny358-1] => (item={'key': 'influxdb', 'value': 'Yanny358-3'}) 
skipping: [Yanny358-1] => (item={'key': 'lb1', 'value': 'Yanny358-1'}) 
skipping: [Yanny358-1] => (item={'key': 'lb2', 'value': 'Yanny358-2'}) 
skipping: [Yanny358-1] => (item={'key': 'mysql1', 'value': 'Yanny358-1'}) 
skipping: [Yanny358-2] => (item={'key': 'grafana', 'value': 'Yanny358-3'}) 
skipping: [Yanny358-2] => (item={'key': 'influxdb', 'value': 'Yanny358-3'}) 
skipping: [Yanny358-1] => (item={'key': 'mysql2', 'value': 'Yanny358-2'}) 
skipping: [Yanny358-2] => (item={'key': 'lb1', 'value': 'Yanny358-1'}) 
skipping: [Yanny358-1] => (item={'key': 'ns1', 'value': 'Yanny358-3'}) 
skipping: [Yanny358-2] => (item={'key': 'lb2', 'value': 'Yanny358-2'}) 
skipping: [Yanny358-1] => (item={'key': 'ns2', 'value': 'Yanny358-1'}) 
skipping: [Yanny358-1] => (item={'key': 'ns3', 'value': 'Yanny358-2'}) 
skipping: [Yanny358-2] => (item={'key': 'mysql1', 'value': 'Yanny358-1'}) 
skipping: [Yanny358-2] => (item={'key': 'mysql2', 'value': 'Yanny358-2'}) 
skipping: [Yanny358-1] => (item={'key': 'prometheus', 'value': 'Yanny358-3'}) 
skipping: [Yanny358-2] => (item={'key': 'ns1', 'value': 'Yanny358-3'}) 
skipping: [Yanny358-1] => (item={'key': 'web1', 'value': 'Yanny358-1'}) 
skipping: [Yanny358-2] => (item={'key': 'ns2', 'value': 'Yanny358-1'}) 
skipping: [Yanny358-1] => (item={'key': 'web2', 'value': 'Yanny358-2'}) 
skipping: [Yanny358-2] => (item={'key': 'ns3', 'value': 'Yanny358-2'}) 
skipping: [Yanny358-1] => (item={'key': 'web3', 'value': 'Yanny358-3'}) 
skipping: [Yanny358-2] => (item={'key': 'prometheus', 'value': 'Yanny358-3'}) 
skipping: [Yanny358-2] => (item={'key': 'web1', 'value': 'Yanny358-1'}) 
skipping: [Yanny358-2] => (item={'key': 'web2', 'value': 'Yanny358-2'}) 
skipping: [Yanny358-2] => (item={'key': 'web3', 'value': 'Yanny358-3'}) 
ok: [Yanny358-3] => (item={'key': 'grafana', 'value': 'Yanny358-3'})
ok: [Yanny358-3] => (item={'key': 'influxdb', 'value': 'Yanny358-3'})
ok: [Yanny358-3] => (item={'key': 'lb1', 'value': 'Yanny358-1'})
ok: [Yanny358-3] => (item={'key': 'lb2', 'value': 'Yanny358-2'})
ok: [Yanny358-3] => (item={'key': 'mysql1', 'value': 'Yanny358-1'})
ok: [Yanny358-3] => (item={'key': 'mysql2', 'value': 'Yanny358-2'})
ok: [Yanny358-3] => (item={'key': 'ns1', 'value': 'Yanny358-3'})
ok: [Yanny358-3] => (item={'key': 'ns2', 'value': 'Yanny358-1'})
ok: [Yanny358-3] => (item={'key': 'ns3', 'value': 'Yanny358-2'})
ok: [Yanny358-3] => (item={'key': 'prometheus', 'value': 'Yanny358-3'})
ok: [Yanny358-3] => (item={'key': 'web1', 'value': 'Yanny358-1'})
ok: [Yanny358-3] => (item={'key': 'web2', 'value': 'Yanny358-2'})
ok: [Yanny358-3] => (item={'key': 'web3', 'value': 'Yanny358-3'})

TASK [bind : Service bind] *****************************************************
ok: [Yanny358-2]
ok: [Yanny358-1]
ok: [Yanny358-3]

TASK [bind_exporter : Install bind exporter] ***********************************
ok: [Yanny358-2]
ok: [Yanny358-1]
ok: [Yanny358-3]

TASK [bind_exporter : Enable bind_exporter] ************************************
ok: [Yanny358-3]
ok: [Yanny358-1]
ok: [Yanny358-2]

PLAY [DNS Resolve] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [Yanny358-2]
ok: [Yanny358-3]
ok: [Yanny358-1]

TASK [dns_resolve : Stop Ubuntu systemd-resolved] ******************************
ok: [Yanny358-1]
ok: [Yanny358-3]
ok: [Yanny358-2]

TASK [dns_resolve : Change DNS configuration file] *****************************
ok: [Yanny358-1]
ok: [Yanny358-3]
ok: [Yanny358-2]

PLAY [Mysql and mysql exporter] ************************************************

TASK [mysql : Install mysql] ***************************************************
ok: [Yanny358-2]
ok: [Yanny358-1]

TASK [mysql : start mysql] *****************************************************
ok: [Yanny358-2]
ok: [Yanny358-1]

TASK [mysql : Copy file] *******************************************************
ok: [Yanny358-2]
ok: [Yanny358-1]

TASK [mysql : MySQL database] **************************************************
ok: [Yanny358-2]
ok: [Yanny358-1]

TASK [mysql : MySQL user] ******************************************************
ok: [Yanny358-2]
ok: [Yanny358-1]

TASK [mysql : MySQL user replication] ******************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql : MySQL replica read only mode ON] *********************************
skipping: [Yanny358-2]
ok: [Yanny358-1]

TASK [mysql : MySQL primary read only mode OFF] ********************************
skipping: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql : Flush handlers] **************************************************

TASK [mysql_exporter : Install mysql exporter] *********************************
ok: [Yanny358-2]
ok: [Yanny358-1]

TASK [mysql_exporter : Create a directory if it does not exist] ****************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql_exporter : Configure MySQL exporter] *******************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql_exporter : Create user exporter] ***********************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql_exporter : Pause for 10 sec] ***************************************
skipping: [Yanny358-1]

TASK [mysql_exporter : Configure MySQL exporter slave] *************************
ok: [Yanny358-2]
ok: [Yanny358-1]

TASK [mysql_exporter : Enable mysql_exporter] **********************************
ok: [Yanny358-2]
ok: [Yanny358-1]

TASK [mysql_backup : Create directory] *****************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql_backup : Create a file] ********************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql_backup : MySQL user backup] ****************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [mysql_backup : Create a file] ********************************************
ok: [Yanny358-2]
ok: [Yanny358-1]

PLAY [Node exporter and nginx exporter] ****************************************

TASK [node_exporter : Install node exporters] **********************************
ok: [Yanny358-1]
ok: [Yanny358-2]
ok: [Yanny358-3]

TASK [node_exporter : Enable node exporter service] ****************************
ok: [Yanny358-1]
ok: [Yanny358-3]
ok: [Yanny358-2]

TASK [nginx : Install nginx] ***************************************************
ok: [Yanny358-1]
ok: [Yanny358-2]
ok: [Yanny358-3]

TASK [nginx : Copy file] *******************************************************
ok: [Yanny358-2]
ok: [Yanny358-1]
ok: [Yanny358-3]

TASK [nginx : start nginx] *****************************************************
ok: [Yanny358-2]
ok: [Yanny358-1]
ok: [Yanny358-3]

TASK [nginx_exporter : Install nginx exporter] *********************************
ok: [Yanny358-1]
ok: [Yanny358-2]
ok: [Yanny358-3]

TASK [nginx_exporter : Copy file] **********************************************
ok: [Yanny358-1]
ok: [Yanny358-2]
ok: [Yanny358-3]

TASK [nginx_exporter : Enable nginx_exporter] **********************************
ok: [Yanny358-2]
ok: [Yanny358-1]
ok: [Yanny358-3]

PLAY [Docker] ******************************************************************

TASK [docker : Docker package] *************************************************
ok: [Yanny358-1]
ok: [Yanny358-2]
ok: [Yanny358-3]

TASK [docker : Log in to DockerHub] ********************************************
ok: [Yanny358-1]
ok: [Yanny358-2]
ok: [Yanny358-3]

TASK [docker : Docker service] *************************************************
ok: [Yanny358-2]
ok: [Yanny358-1]
ok: [Yanny358-3]

PLAY [agama] *******************************************************************

TASK [agama : Create agama directory] ******************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [agama : Download agama Dockerfile] ***************************************
ok: [Yanny358-2]
ok: [Yanny358-1]

TASK [agama : Build docker image] **********************************************
ok: [Yanny358-2]
ok: [Yanny358-1]

TASK [agama : Agama containers] ************************************************
ok: [Yanny358-1] => (item={'key': 'agama1', 'value': 8007})
ok: [Yanny358-2] => (item={'key': 'agama1', 'value': 8007})
ok: [Yanny358-2] => (item={'key': 'agama2', 'value': 8008})
ok: [Yanny358-1] => (item={'key': 'agama2', 'value': 8008})

PLAY [Prometheus] **************************************************************

TASK [prometheus : Install prometheus] *****************************************
ok: [Yanny358-3]

TASK [prometheus : Configure Prometheus] ***************************************
ok: [Yanny358-3]

TASK [prometheus : Configure Prometheus web path] ******************************
ok: [Yanny358-3]

TASK [prometheus : start prometheus] *******************************************
ok: [Yanny358-3]

PLAY [Grafana] *****************************************************************

TASK [docker : Docker package] *************************************************
ok: [Yanny358-3]

TASK [docker : Log in to DockerHub] ********************************************
ok: [Yanny358-3]

TASK [docker : Docker service] *************************************************
ok: [Yanny358-3]

TASK [grafana : Grafana directory] *********************************************
ok: [Yanny358-3]

TASK [grafana : Grafana configuration] *****************************************
ok: [Yanny358-3]

TASK [grafana : Create directory for dashboard and datasources] ****************
ok: [Yanny358-3] => (item=dashboards)
ok: [Yanny358-3] => (item=datasources)

TASK [grafana : Datasource Grafana prometheus] *********************************
ok: [Yanny358-3]

TASK [grafana : Datasource Grafana latency] ************************************
ok: [Yanny358-3]

TASK [grafana : Dashboard Grafana main] ****************************************
ok: [Yanny358-3]

TASK [grafana : Main dashboard] ************************************************
ok: [Yanny358-3]

TASK [grafana : Syslog dashboard] **********************************************
ok: [Yanny358-3]

TASK [grafana : MySQL dashboard] ***********************************************
ok: [Yanny358-3]

TASK [grafana : Grafana docker container] **************************************
ok: [Yanny358-3]

PLAY [Influxdb] ****************************************************************

TASK [influxdb : Add an Apt signing key] ***************************************
ok: [Yanny358-3]

TASK [influxdb : Add specified repository] *************************************
ok: [Yanny358-3]

TASK [influxdb : Install influxdb and telegraf] ********************************
ok: [Yanny358-3]

TASK [influxdb : Reconfigure telegraf] *****************************************
ok: [Yanny358-3]

TASK [influxdb : Supress influxdb request logging] *****************************
ok: [Yanny358-3]

TASK [influxdb : Enable influxdb] **********************************************
ok: [Yanny358-3]

TASK [influxdb : Enable telegraf] **********************************************
ok: [Yanny358-3]

TASK [influxdb_exporter : Download InfluxDB stats exporter] ********************
ok: [Yanny358-3]

TASK [influxdb_exporter : InfluxDB stats exporter service] *********************
ok: [Yanny358-3]

TASK [influxdb_exporter : Enable prometheus-influxdb-stats-exporter] ***********
ok: [Yanny358-3]

TASK [influxdb_backup : Create directory] **************************************
ok: [Yanny358-3]

TASK [influxdb_backup : Create a file] *****************************************
ok: [Yanny358-3]

TASK [pinger : Install fping] **************************************************
ok: [Yanny358-3]

TASK [pinger : Add the user pinger] ********************************************
ok: [Yanny358-3]

TASK [pinger : Create directory] ***********************************************
ok: [Yanny358-3]

TASK [pinger : pinger configuration] *******************************************
ok: [Yanny358-3]

TASK [pinger : pinger script] **************************************************
ok: [Yanny358-3]

TASK [pinger : pinger service] *************************************************
ok: [Yanny358-3]

TASK [pinger : Enable pinger] **************************************************
ok: [Yanny358-3]

TASK [rsyslog : Reconfigure rsyslog] *******************************************
ok: [Yanny358-3]

TASK [rsyslog : Enable rsyslog] ************************************************
ok: [Yanny358-3]

PLAY [Haproxy] *****************************************************************

TASK [haproxy : Install haproxy] ***********************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [haproxy : Copy file] *****************************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [haproxy : start haproxy] *************************************************
ok: [Yanny358-2]
ok: [Yanny358-1]

TASK [haproxy_exporter : Install haproxy exporter] *****************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [haproxy_exporter : Copy file] ********************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [haproxy_exporter : Enable haproxy_exporter] ******************************
ok: [Yanny358-1]
ok: [Yanny358-2]

PLAY [Keepalived] **************************************************************

TASK [Gathering Facts] *********************************************************
ok: [Yanny358-2]
ok: [Yanny358-1]

TASK [keepalived : Install keepalived] *****************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [keepalived : Create user keepalived_script] ******************************
ok: [Yanny358-2]
ok: [Yanny358-1]

TASK [keepalived : Copy file ha88.j2] ******************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [keepalived : Copy file keepalived.conf.j2] *******************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [keepalived : start keepalived] *******************************************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [keepalived_exporter : Download and unarchive keepalived exporter] ********
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [keepalived_exporter : Create keepalived-exporter service] ****************
ok: [Yanny358-1]
ok: [Yanny358-2]

TASK [keepalived_exporter : Start service keepalived-exporter, if not started] ***
ok: [Yanny358-1]
ok: [Yanny358-2]

PLAY RECAP *********************************************************************
Yanny358-1                 : ok=71   changed=0    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
Yanny358-2                 : ok=71   changed=0    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
Yanny358-3                 : ok=76   changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   

+ date
Tue Jan 18 16:47:05 EET 2022
